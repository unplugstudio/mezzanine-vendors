# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-05-28 18:47
from __future__ import unicode_literals

from django.db import migrations, models
import django_google_maps.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('address', django_google_maps.fields.AddressField(max_length=200)),
                ('geolocation', django_google_maps.fields.GeoLocationField(max_length=100)),
                ('phone', models.CharField(max_length=100, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.CharField(blank=True, max_length=100, verbose_name='Website')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('subjects', models.ManyToManyField(related_name='vendors', to='vendors.Subject')),
                ('types', models.ManyToManyField(related_name='vendors', to='vendors.Type')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
    ]
